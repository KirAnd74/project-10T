
from aiogram import Router, F

from aiogram.filters import CommandStart, Command, or_f

from aiogram.types import Message

from aiogram.fsm.context import FSMContext


from kbds import reply

from kbds.generators import generate

from kbds.state import Work


user_private_router = Router()


# Define URLs for OGE and EGE tasks

oge_urls = {

    "üñäÔ∏è1": "https://telegra.ph/Zadanie-1-Kolichestvennye-parametry-informacionnyh-obektov-11-04",

    "üñäÔ∏è2": "https://telegra.ph/Zadanie-2-Kodirovanie-i-dekodirovanie-informacii-11-04",

    "üñäÔ∏è3": "https://telegra.ph/Zadanie-3-Znachenie-logicheskogo-vyrazheniya-11-04",

    "üñäÔ∏è4": "https://telegra.ph/Zadanie-4Formalnye-opisaniya-realnyh-obektov-i-processov-11-04",

    "üñäÔ∏è5": "https://telegra.ph/Zadanie-5-Prostoj-linejnyj-algoritm-dlya-formalnogo-11-04",

    "üñäÔ∏è6": "https://telegra.ph/Zadanie-6-Programma-s-uslovnym-operatorom-11-13",

    "üñäÔ∏è7": "https://telegra.ph/Zadanie-7-Informacionno-kommunikacionnye-tehnologii-11-13",

    "üñäÔ∏è8": "https://telegra.ph/Zadanie-8-Zaprosy-dlya-poiskovyh-sistem-s-ispolzovaniem-logicheskih-vyrazhenij-11-13",

    "üñäÔ∏è9": "https://telegra.ph/Zadanie-5-Analizirovanie-informacii-predstavlennoj-v-vide-shem-11-13",

    "üñäÔ∏è10": "https://telegra.ph/Zadanie-10-Sravnenie-chisel-v-razlichnyh-sistemah-schisleniya-11-13",

    "üñäÔ∏è11": "https://telegra.ph/Zadanie-11-Ispolzovanie-poiska-operacionnoj-sistemy-i-tekstovogo-redaktora-11-13",

    "üñäÔ∏è12": "https://telegra.ph/Zadanie-12-Ispolzovanie-poiskovyh-sredstv-operacionnoj-sistemy-11-13",

    "üñäÔ∏è13": "13.1: \n https://telegra.ph/Zadanie-131-Sozdanie-prezentacii-11-18 \n 13.2: \n https://telegra.ph/Zadanie-132-Formatirovanie-teksta-11-18",

    "üñäÔ∏è14": "https://telegra.ph/Zadanie-14-Obrabotka-bolshogo-massiva-dannyh-11-18",

    "üñäÔ∏è15": "15.1: \n https://telegra.ph/Zadanie-151-Korotkij-algoritm-v-razlichnyh-sredah-ispolneniya-11-18 \n 15.2:\n https://telegra.ph/Zadanie-152-Programmirovanie-11-18",

}
oge_urls2 = {
    "üìî1":"–í–∞—Ä–∏–∞–Ω—Ç 1: https://telegra.ph/Variant-1-01-19-2",
    "üìî2":"–í–∞—Ä–∏–∞–Ω—Ç 2: https://telegra.ph/Variant-2-01-19",
    "üìî3":"–í–∞—Ä–∏–∞–Ω—Ç 3:https://telegra.ph/Variant-3-01-19-2",
    "üìî4":"–í–∞—Ä–∏–∞–Ω—Ç 4:https://telegra.ph/Variant-4-01-19",
}


ege_urls = {

    "‚úèÔ∏è1": "https://telegra.ph/Zadanie-1-Analiz-informacionnyh-modelej-11-18",

    "‚úèÔ∏è2": "https://telegra.ph/Zadanie-2Postroenie-tablic-istinnosti-logicheskih-vyrazhenij-11-19",

    "‚úèÔ∏è3": "https://telegra.ph/Zadanie-3-11-19",

    "‚úèÔ∏è4": "https://telegra.ph/Zadanie-4-Kodirovanie-i-dekodirovanie-informacii-11-19",

    "‚úèÔ∏è5": "https://telegra.ph/Zadanie-5-Analiz-i-postroenie-algoritmov-dlya-ispolnitelej-11-19",

    "‚úèÔ∏è6": "https://telegra.ph/Zadanie-6-Opredelenie-rezultatov-raboty-prostejshih-algoritmov-11-19",

    "‚úèÔ∏è7": "https://telegra.ph/Zadanie-7-Kodirovanie-i-dekodirovanie-informacii-Peredacha-informacii-11-19",

    "‚úèÔ∏è8": "https://telegra.ph/Zadanie-8Perebor-slov-i-sistemy-schisleniya-11-19",

    "‚úèÔ∏è9": "https://telegra.ph/Zadanie-9-Rabota-s-tablicami-11-19",

    "‚úèÔ∏è10": "https://telegra.ph/Zadanie-10-Poisk-simvolov-v-tekstovom-redaktore-11-19",

    "‚úèÔ∏è11": "https://telegra.ph/Zadanie-11-Vychislenie-kolichestva-informacii-11-19",

    "‚úèÔ∏è12": "https://telegra.ph/Zadanie-12Vypolnenie-algoritmov-dlya-ispolnitelej-11-19",

    "‚úèÔ∏è13": "https://telegra.ph/Zadanie-13Organizaciya-kompyuternyh-setej-Adresaciya-11-20",

    "‚úèÔ∏è14": "https://telegra.ph/Zadanie-14Kodirovanie-chisel-Sistemy-schisleniya-11-20",

    "‚úèÔ∏è15": "https://telegra.ph/Zadanie-15Preobrazovanie-logicheskih-vyrazhenij-11-20",

    "‚úèÔ∏è16": "https://telegra.ph/Zadanie-16Rekursivnye-algoritmy-11-20",

    "‚úèÔ∏è17": "https://telegra.ph/Zadanie-17Obrabotki-chislovoj-posledovatelnosti-11-20",

    "‚úèÔ∏è18": "https://telegra.ph/Zadanie-18Robot-sborshchik-monet-11-20",

    "‚úèÔ∏è19": "https://telegra.ph/Zadanie-19Vyigryshnaya-strategiya-Zadanie-1-11-20",

    "‚úèÔ∏è20": "https://telegra.ph/Zadanie-20Vyigryshnaya-strategiya-Zadanie-2-11-20",

    "‚úèÔ∏è21": "https://telegra.ph/Zadanie-21Vyigryshnaya-strategiya-Zadanie-3-11-20",

    "‚úèÔ∏è22": "https://telegra.ph/Zadanie-22Mnogoprocessornye-sistemy-02-01",

    "‚úèÔ∏è23": "https://telegra.ph/Zadanie-23Operator-prisvaivaniya-i-vetvleniya-Perebor-variantov-postroenie-dereva-11-20",

    "‚úèÔ∏è24": "https://telegra.ph/Zadanie-24Obrabotka-simvolnyh-strok-11-20",

    "‚úèÔ∏è25": "https://telegra.ph/Zadanie-25Obrabotka-celochislennoj-informacii-02-01",

    "‚úèÔ∏è26": "https://telegra.ph/Zadanie-12Vypolnenie-algoritmov-dlya-ispolnitelej-11-20",

    "‚úèÔ∏è27": "https://telegra.ph/Zadanie-27Programmirovanie-11-20",

}
ege_urls2 = {
    "üìì1":"–í–∞—Ä–∏–∞–Ω—Ç 1: https://telegra.ph/Variant-1-01-25",
    "üìì2":"–í–∞—Ä–∏–∞–Ω—Ç 2: https://telegra.ph/Variant-1-01-25-2",
    "üìì3":"–í–∞—Ä–∏–∞–Ω—Ç 3: https://telegra.ph/Variant-3-01-25",
    "üìì4":"–í–∞—Ä–∏–∞–Ω—Ç 4: https://telegra.ph/Variant-4-01-25 \n –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ: https://telegra.ph/Variant-42-01-25",
}

@user_private_router.message(CommandStart())

async def start_cmd(message: Message):

    await message.answer("–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ", reply_markup=reply.start_kb)


@user_private_router.message(F.text == "–ù–∞–∑–∞–¥")

async def menu(message: Message):

    await start_cmd(message)


@user_private_router.message(or_f(Command("oge"), (F.text == "–û–ì–≠")))  # OGE

async def menu(message: Message):

    await message.answer(

        "–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å —è —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –±–æ—Ç, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π, —Ç—ã —É–≤–∏–¥–∏—à—å —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π.\n–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ü—Ä–∞–∫—Ç–∏–∫–∞, —Ç–æ —Å–º–æ–∂–µ—à—å —Ä–µ—à–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞–Ω–∏–π",

        reply_markup=reply.oge_kb,

    )

@user_private_router.message(or_f(Command("help"), (F.text == "–ü–æ–º–æ—â—å")))

async def menu(message: Message):
    await message.answer("–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é, –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ: \n @kirand21a  ", reply_markup=reply.help_kb)


@user_private_router.message(F.text == "–†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π")

async def menu(message: Message):

    await message.answer("–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è", reply_markup=reply.oge_razbor_kb)


@user_private_router.message(F.text == "–ü—Ä–∞–∫—Ç–∏–∫–∞")

async def menu(message: Message):

    await message.answer(

        "–ì–æ—Ç–æ–≤ –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è?\n–í —ç—Ç–æ–º –±–ª–æ–∫–µ –±—É–¥—É—Ç –∏ –ø—Ä–æ—Å—Ç—ã–µ –∏ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏.",

        reply_markup=reply.oge_practika_kb,

    )


# Handler for OGE task URLs

@user_private_router.message(F.text.lower().in_(oge_urls.keys()))

async def handle_oge_tasks(message: Message):

    url = oge_urls[message.text.lower()]

    await message.answer(url, reply_markup=reply.oge_razbor_kb)
@user_private_router.message(F.text.lower().in_(oge_urls2.keys()))

async def handle_oge_tasks(message: Message):

    url = oge_urls2[message.text.lower()]

    await message.answer(url, reply_markup=reply.oge_practika_kb)


# Handler for EGE commands

@user_private_router.message(or_f(Command("ege"), (F.text == "–ï–ì–≠")))  # EGE

async def menu(message: Message):

    await message.answer(

        "–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å —è —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –±–æ—Ç, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π, —Ç—ã —É–≤–∏–¥–∏—à—å —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π.\n–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ü—Ä–∞–∫—Ç–∏–∫–∞, —Ç–æ —Å–º–æ–∂–µ—à—å —Ä–µ—à–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞–Ω–∏–π",

        reply_markup=reply.ege_kb,

    )


@user_private_router.message(F.text == "‚úèÔ∏è–†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π")

async def menu(message: Message):

    await message.answer("–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è:\n—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1", reply_markup=reply.ege_razbor_str1_kb)

@user_private_router.message(F.text == "‚úèÔ∏è–ü—Ä–∞–∫—Ç–∏–∫–∞")
async def menu(message: Message):
    await message.answer(
        f"–ì–æ—Ç–æ–≤ –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è?\n –í —ç—Ç–æ–º –±–ª–æ–∫–µ –±—É–¥—É—Ç –∏ –ø—Ä–æ—Å—Ç—ã –∏ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏. ",
        reply_markup=reply.ege_practika_kb,)


# Handler for EGE task URLs

@user_private_router.message(F.text.lower().in_(ege_urls.keys()))

async def handle_ege_tasks(message: Message):

    url = ege_urls[message.text.lower()]

    await message.answer(url, reply_markup=reply.ege_razbor_str1_kb)
@user_private_router.message(F.text.lower().in_(ege_urls2.keys()))

async def handle_ege_tasks(message: Message):

    url = ege_urls2[message.text.lower()]

    await message.answer(url, reply_markup=reply.ege_practika_kb)
    
@user_private_router.message(F.text == "üîô–ù–∞–∑–∞–¥")
async def menu(message: Message):
    await message.answer(
        "–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å —è —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –±–æ—Ç , –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å  –†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π , —Ç—ã —É–≤–∏–¥–∏—à—å  —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π.\n–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ü—Ä–∞–∫—Ç–∏–∫–∞ , —Ç–æ —Å–º–æ–∂–µ—à—å —Ä–µ—à–∞—Ç—å  –ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞–Ω–∏–π",
        reply_markup=reply.oge_kb,
    )
@user_private_router.message(F.text == "‚óÄÔ∏è–ù–∞–∑–∞–¥")
async def menu(message: Message):
    await message.answer(
        "–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å —è —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –±–æ—Ç , –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å  –†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π , —Ç—ã —É–≤–∏–¥–∏—à—å  —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π.\n–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ü—Ä–∞–∫—Ç–∏–∫–∞ , —Ç–æ —Å–º–æ–∂–µ—à—å —Ä–µ—à–∞—Ç—å  –ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞–Ω–∏–π",
        reply_markup=reply.ege_kb,
    )


@user_private_router.message(F.text == "‚û°Ô∏è–î–∞–ª–µ–µ")
async def menu(message: Message):
    await message.answer(
        "—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ2",
        reply_markup=reply.ege_razbor_str2_kb,
    )


@user_private_router.message(F.text == "‚¨ÖÔ∏è–ù–∞–∑–∞–¥")
async def menu(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è:\n—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1",
        reply_markup=reply.ege_razbor_str1_kb,
    )


# AI bot command handling

@user_private_router.message()

async def ai(message: Message, state: FSMContext):

    res = await generate(message.text)

    await message.answer(res.choices[0].message.content, reply_markup=reply.ai_kb)

    await state.clear()


@user_private_router.message(Work.process)

async def stop(message: Message):

    await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞–Ω–∏—è")